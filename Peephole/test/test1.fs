: _compress32
( 2 parameters ) 
0
>r
rsp@
32
-
rsp! ( allocate 32 local variables )
swap
over
@
1
l!
over
1+
@
2
l!
over
2
+
@
3
l!
over
3
+
@
4
l!
over
4
+
@
5
l!
over
5
+
@
6
l!
over
6
+
@
7
l!
over
7
+
@
8
l!
over
8
+
@
9
l!
over
9
+
@
10
l!
over
10
+
@
11
l!
over
11
+
@
12
l!
over
12
+
@
13
l!
over
13
+
@
14
l!
over
14
+
@
15
l!
swap
15
+
@
16
l!
dup
4
+
@
17
l!
dup
5
+
@
18
l!
dup
6
+
@
19
l!
dup
7
+
@
20
l!
dup
8
+
@
21
l!
dup
9
+
@
22
l!
dup
10
+
@
23
l!
dup
11
+
@
24
l!
dup
30
+
@
_c32
@
xor
25
l!
dup
31
+
@
_c32
1
+
@
xor
26
l!
dup
32
+
@
_c32
2
+
@
xor
27
l!
dup
33
+
@
_c32
3
+
@
xor
28
l!
dup
3
+
@
0
-
0=
?GOTO lbl_33 ( jump if equal )
_c32
4
+
@
29
l!
_c32
5
+
@
30
l!
_c32
6
+
@
31
l!
_c32
7
+
@
32
l!
GOTO lbl_34
Label lbl_33
dup
12
+
@
_c32
4
+
@
xor
29
l!
dup
12
+
@
_c32
5
+
@
xor
30
l!
dup
13
+
@
_c32
6
+
@
xor
31
l!
dup
13
+
@
_c32
7
+
@
xor
32
l!
Label lbl_34
0
GOTO lbl_54
Label lbl_51
dup
6
shift
17
l@
21
l@
+
over
_sigma
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
1
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
17
l!
29
l@
17
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
29
l!
25
l@
29
l@
+
25
l!
21
l@
25
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
21
l!
dup
6
shift
17
l@
21
l@
+
over
_sigma
1
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
17
l!
29
l@
17
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
29
l!
25
l@
29
l@
+
25
l!
dup
6
shift
18
l@
22
l@
+
over
_sigma
2
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
3
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
18
l!
30
l@
18
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
30
l!
26
l@
30
l@
+
26
l!
22
l@
26
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
22
l!
dup
6
shift
18
l@
22
l@
+
over
_sigma
3
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
2
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
18
l!
30
l@
18
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
30
l!
26
l@
30
l@
+
26
l!
dup
6
shift
19
l@
23
l@
+
over
_sigma
4
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
5
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
19
l!
31
l@
19
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
31
l!
27
l@
31
l@
+
27
l!
23
l@
27
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
23
l!
dup
6
shift
19
l@
23
l@
+
over
_sigma
5
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
4
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
19
l!
31
l@
19
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
31
l!
27
l@
31
l@
+
27
l!
dup
6
shift
20
l@
24
l@
+
over
_sigma
6
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
7
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
20
l!
32
l@
20
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
32
l!
28
l@
32
l@
+
28
l!
24
l@
28
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
24
l!
dup
6
shift
20
l@
24
l@
+
over
_sigma
7
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
6
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
20
l!
32
l@
20
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
32
l!
28
l@
32
l@
+
28
l!
dup
6
shift
17
l@
22
l@
+
over
_sigma
8
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
9
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
17
l!
32
l@
17
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
32
l!
27
l@
32
l@
+
27
l!
22
l@
27
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
22
l!
dup
6
shift
17
l@
22
l@
+
over
_sigma
9
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
8
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
17
l!
32
l@
17
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
32
l!
27
l@
32
l@
+
27
l!
dup
6
shift
18
l@
23
l@
+
over
_sigma
10
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
11
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
18
l!
29
l@
18
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
29
l!
28
l@
29
l@
+
28
l!
23
l@
28
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
23
l!
dup
6
shift
18
l@
23
l@
+
over
_sigma
11
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
10
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
18
l!
29
l@
18
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
29
l!
28
l@
29
l@
+
28
l!
dup
6
shift
19
l@
24
l@
+
over
_sigma
12
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
13
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
19
l!
30
l@
19
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
30
l!
25
l@
30
l@
+
25
l!
24
l@
25
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
24
l!
dup
6
shift
19
l@
24
l@
+
over
_sigma
13
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
12
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
19
l!
30
l@
19
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
30
l!
25
l@
30
l@
+
25
l!
dup
6
shift
20
l@
21
l@
+
over
_sigma
14
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
15
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
20
l!
31
l@
20
l@
xor
16
ROT32
-rot
rot
( Cast to unsigned int )
31
l!
26
l@
31
l@
+
26
l!
21
l@
26
l@
xor
20
ROT32
-rot
rot
( Cast to unsigned int )
21
l!
dup
6
shift
20
l@
21
l@
+
over
_sigma
15
+
2
Rot32
+
-2
Rot32
@
rsp@
+
@
rot
_sigma
14
+
2
Rot32
+
-2
Rot32
@
_c32
+
@
xor
+
20
l!
31
l@
20
l@
xor
24
ROT32
-rot
rot
( Cast to unsigned int )
31
l!
26
l@
31
l@
+
26
l!
Label lbl_52
1+
Label lbl_54
dup
12
u<
?GOTO lbl_51 ( jump if less )
drop
dup
4
+
swap
over
@
17
l@
25
l@
xor
2over
nip
30
+
@
xor
xor
rot
!
dup
5
+
swap
over
@
18
l@
26
l@
xor
2over
nip
31
+
@
xor
xor
rot
!
dup
6
+
swap
over
@
19
l@
27
l@
xor
2over
nip
32
+
@
xor
xor
rot
!
dup
7
+
swap
over
@
20
l@
28
l@
xor
2over
nip
33
+
@
xor
xor
rot
!
dup
8
+
swap
over
@
21
l@
29
l@
xor
2over
nip
30
+
@
xor
xor
rot
!
dup
9
+
swap
over
@
22
l@
30
l@
xor
2over
nip
31
+
@
xor
xor
rot
!
dup
10
+
swap
over
@
23
l@
31
l@
xor
2over
nip
32
+
@
xor
xor
rot
!
dup
11
+
swap
over
@
24
l@
32
l@
xor
rot
33
+
@
xor
xor
swap
!
0
( return int )
Label lbl_3

rsp@
32
+
rsp!
rdrop ( deallocate 32 local variables )
;