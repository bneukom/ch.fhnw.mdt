
/*
 * generated by Xtext
 */
lexer grammar InternalUForthLexer;


@header {
package ch.fhnw.mdt.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}




NEGATE : ('N'|'n')('E'|'e')('G'|'g')('A'|'a')('T'|'t')('E'|'e');

UNDER : ('U'|'u')('N'|'n')('D'|'d')('E'|'e')('R'|'r');

ROT_1 : '-'('R'|'r')('O'|'o')('T'|'t');

CALL : ('C'|'c')('A'|'a')('L'|'l')('L'|'l');

OVER : ('O'|'o')('V'|'v')('E'|'e')('R'|'r');

SWAP : ('S'|'s')('W'|'w')('A'|'a')('P'|'p');

TUCK : ('T'|'t')('U'|'u')('C'|'c')('K'|'k');

DUP : ('D'|'d')('U'|'u')('P'|'p');

NIP : ('N'|'n')('I'|'i')('P'|'p');

ROT : ('R'|'r')('O'|'o')('T'|'t');

Colon : ':';

Semicolon : ';';



fragment RULE_DIGIT : '0'..'9';

fragment RULE_DECINT : RULE_DIGIT+;

RULE_SL_COMMENT : '(' ~(('\n'|'\r'))* ')' RULE_WS*;

RULE_INT : '-'? ('0'..'9'|'A'..'F')+;

RULE_DOUBLE : RULE_DECINT ('.' RULE_DIGIT*|('.' RULE_DIGIT*)? ('E'|'e') ('-'|'+')? RULE_DECINT);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_'|'!'|'@'|'?'|','|'<'|'>'|'=') ('a'..'z'|'A'..'Z'|'_'|'!'|'?'|'@'|'<'|'>'|'0'..'9'|','|'=')*;

RULE_OPERATOR : ('+'|'-'|'*'|'/');

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;



