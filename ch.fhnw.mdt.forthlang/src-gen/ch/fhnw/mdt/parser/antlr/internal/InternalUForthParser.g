/*
 * generated by Xtext
 */
parser grammar InternalUForthParser;

options {
	tokenVocab=InternalUForthLexer;
	superClass=AbstractInternalAntlrParser;
	
}

@header {
package ch.fhnw.mdt.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ch.fhnw.mdt.services.UForthGrammarAccess;

}

@members {


	private UForthGrammarAccess grammarAccess;
	 	
	public InternalUForthParser(TokenStream input, UForthGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "Forth";	
	} 
	   	   	
	@Override
	protected UForthGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleForth
entryRuleForth returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getForthRule()); }
	 iv_ruleForth=ruleForth 
	 { $current=$iv_ruleForth.current; } 
	 EOF 
;

// Rule Forth
ruleForth returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getForthAccess().getInstructionsInstructionParserRuleCall_0()); 
	    }
		lv_instructions_0_0=ruleInstruction		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getForthRule());
	        }
       		add(
       			$current, 
       			"instructions",
        		lv_instructions_0_0, 
        		"Instruction");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	 iv_ruleInstruction=ruleInstruction 
	 { $current=$iv_ruleInstruction.current; } 
	 EOF 
;

// Rule Instruction
ruleInstruction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getCreateParserRuleCall_0()); 
    }
    this_Create_0=ruleCreate
    {
        $current = $this_Create_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getFunctionParserRuleCall_1()); 
    }
    this_Function_1=ruleFunction
    {
        $current = $this_Function_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getInstructionAccess().getWordParserRuleCall_2()); 
    }
    this_Word_2=ruleWord
    {
        $current = $this_Word_2.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	 iv_ruleFunction=ruleFunction 
	 { $current=$iv_ruleFunction.current; } 
	 EOF 
;

// Rule Function
ruleFunction returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Colon
    {
    	newLeafNode(otherlv_0, grammarAccess.getFunctionAccess().getColonKeyword_0());
    }

    { 
        newCompositeNode(grammarAccess.getFunctionAccess().getWordParserRuleCall_1()); 
    }
    this_Word_1=ruleWord
    {
        $current = $this_Word_1.current;
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAccess().getWordsWordParserRuleCall_2_0()); 
	    }
		lv_words_2_0=ruleWord		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionRule());
	        }
       		add(
       			$current, 
       			"words",
        		lv_words_2_0, 
        		"Word");
	        afterParserOrEnumRuleCall();
	    }

)
)*
	otherlv_3=Semicolon
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleCreate
entryRuleCreate returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getCreateRule()); }
	 iv_ruleCreate=ruleCreate 
	 { $current=$iv_ruleCreate.current; } 
	 EOF 
;

// Rule Create
ruleCreate returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Create
    {
    	newLeafNode(otherlv_0, grammarAccess.getCreateAccess().getCreateKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCreateAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCreateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)((
(
		{ 
	        newCompositeNode(grammarAccess.getCreateAccess().getLitLITERALParserRuleCall_2_0_0()); 
	    }
		lv_lit_2_0=ruleLITERAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCreateRule());
	        }
       		add(
       			$current, 
       			"lit",
        		lv_lit_2_0, 
        		"LITERAL");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Comma
    {
    	newLeafNode(otherlv_3, grammarAccess.getCreateAccess().getCommaKeyword_2_1());
    }
)*)
;





// Entry rule entryRuleLITERAL
entryRuleLITERAL returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getLITERALRule()); } 
	 iv_ruleLITERAL=ruleLITERAL 
	 { $current=$iv_ruleLITERAL.current.getText(); }  
	 EOF 
;

// Rule LITERAL
ruleLITERAL returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getLITERALAccess().getINTTerminalRuleCall_0()); 
    }

    |    this_DOUBLE_1=RULE_DOUBLE    {
		$current.merge(this_DOUBLE_1);
    }

    { 
    newLeafNode(this_DOUBLE_1, grammarAccess.getLITERALAccess().getDOUBLETerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleIntrinsicBranchWords
entryRuleIntrinsicBranchWords returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntrinsicBranchWordsRule()); }
	 iv_ruleIntrinsicBranchWords=ruleIntrinsicBranchWords 
	 { $current=$iv_ruleIntrinsicBranchWords.current; } 
	 EOF 
;

// Rule IntrinsicBranchWords
ruleIntrinsicBranchWords returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=
	Jsr
    {
        newLeafNode(lv_name_0_1, grammarAccess.getIntrinsicBranchWordsAccess().getNameJsrKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=
	Branch
    {
        newLeafNode(lv_name_0_2, grammarAccess.getIntrinsicBranchWordsAccess().getName0BranchKeyword_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=
	Branch_2
    {
        newLeafNode(lv_name_0_3, grammarAccess.getIntrinsicBranchWordsAccess().getName0BranchKeyword_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=
	Branch_1
    {
        newLeafNode(lv_name_0_4, grammarAccess.getIntrinsicBranchWordsAccess().getNameBranchKeyword_0_3());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=
	SBranch
    {
        newLeafNode(lv_name_0_5, grammarAccess.getIntrinsicBranchWordsAccess().getNameSBranchKeyword_0_4());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=
	NsBranch
    {
        newLeafNode(lv_name_0_6, grammarAccess.getIntrinsicBranchWordsAccess().getNameNsBranchKeyword_0_5());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=
	NcBranch
    {
        newLeafNode(lv_name_0_7, grammarAccess.getIntrinsicBranchWordsAccess().getNameNcBranchKeyword_0_6());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=
	NoBranch
    {
        newLeafNode(lv_name_0_8, grammarAccess.getIntrinsicBranchWordsAccess().getNameNoBranchKeyword_0_7());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

    |		lv_name_0_9=
	TorBranch
    {
        newLeafNode(lv_name_0_9, grammarAccess.getIntrinsicBranchWordsAccess().getNameTorBranchKeyword_0_8());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_9, null);
	    }

    |		lv_name_0_10=
	ZExit
    {
        newLeafNode(lv_name_0_10, grammarAccess.getIntrinsicBranchWordsAccess().getNameZExitKeyword_0_9());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_10, null);
	    }

    |		lv_name_0_11=
	NzExit
    {
        newLeafNode(lv_name_0_11, grammarAccess.getIntrinsicBranchWordsAccess().getNameNzExitKeyword_0_10());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicBranchWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_11, null);
	    }

)

)
)
;





// Entry rule entryRuleIntrinsicStackWords
entryRuleIntrinsicStackWords returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntrinsicStackWordsRule()); }
	 iv_ruleIntrinsicStackWords=ruleIntrinsicStackWords 
	 { $current=$iv_ruleIntrinsicStackWords.current; } 
	 EOF 
;

// Rule IntrinsicStackWords
ruleIntrinsicStackWords returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=
	CLEAR
    {
        newLeafNode(lv_name_0_1, grammarAccess.getIntrinsicStackWordsAccess().getNameCLEARKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=
	DROP
    {
        newLeafNode(lv_name_0_2, grammarAccess.getIntrinsicStackWordsAccess().getNameDROPKeyword_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=
	DUP
    {
        newLeafNode(lv_name_0_3, grammarAccess.getIntrinsicStackWordsAccess().getNameDUPKeyword_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=
	DUP_2
    {
        newLeafNode(lv_name_0_4, grammarAccess.getIntrinsicStackWordsAccess().getNameDUPKeyword_0_3());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=
	SWAP
    {
        newLeafNode(lv_name_0_5, grammarAccess.getIntrinsicStackWordsAccess().getNameSWAPKeyword_0_4());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=
	NIP
    {
        newLeafNode(lv_name_0_6, grammarAccess.getIntrinsicStackWordsAccess().getNameNIPKeyword_0_5());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=
	OVER
    {
        newLeafNode(lv_name_0_7, grammarAccess.getIntrinsicStackWordsAccess().getNameOVERKeyword_0_6());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=
	ROT
    {
        newLeafNode(lv_name_0_8, grammarAccess.getIntrinsicStackWordsAccess().getNameROTKeyword_0_7());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

    |		lv_name_0_9=
	ROT_1
    {
        newLeafNode(lv_name_0_9, grammarAccess.getIntrinsicStackWordsAccess().getNameROTKeyword_0_8());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_9, null);
	    }

    |		lv_name_0_10=
	TUCK
    {
        newLeafNode(lv_name_0_10, grammarAccess.getIntrinsicStackWordsAccess().getNameTUCKKeyword_0_9());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_10, null);
	    }

    |		lv_name_0_11=
	UNDER
    {
        newLeafNode(lv_name_0_11, grammarAccess.getIntrinsicStackWordsAccess().getNameUNDERKeyword_0_10());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_11, null);
	    }

    |		lv_name_0_12=
	DROP_1
    {
        newLeafNode(lv_name_0_12, grammarAccess.getIntrinsicStackWordsAccess().getName2DROPKeyword_0_11());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_12, null);
	    }

    |		lv_name_0_13=
	DUP_1
    {
        newLeafNode(lv_name_0_13, grammarAccess.getIntrinsicStackWordsAccess().getName2DUPKeyword_0_12());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_13, null);
	    }

    |		lv_name_0_14=
	SWAP_1
    {
        newLeafNode(lv_name_0_14, grammarAccess.getIntrinsicStackWordsAccess().getName2SWAPKeyword_0_13());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_14, null);
	    }

    |		lv_name_0_15=
	OVER_1
    {
        newLeafNode(lv_name_0_15, grammarAccess.getIntrinsicStackWordsAccess().getName2OVERKeyword_0_14());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_15, null);
	    }

    |		lv_name_0_16=
	RCLEAR
    {
        newLeafNode(lv_name_0_16, grammarAccess.getIntrinsicStackWordsAccess().getNameRCLEARKeyword_0_15());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_16, null);
	    }

    |		lv_name_0_17=
	R_1
    {
        newLeafNode(lv_name_0_17, grammarAccess.getIntrinsicStackWordsAccess().getNameRKeyword_0_16());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_17, null);
	    }

    |		lv_name_0_18=
	R_2
    {
        newLeafNode(lv_name_0_18, grammarAccess.getIntrinsicStackWordsAccess().getNameRKeyword_0_17());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_18, null);
	    }

    |		lv_name_0_19=
	R
    {
        newLeafNode(lv_name_0_19, grammarAccess.getIntrinsicStackWordsAccess().getNameRKeyword_0_18());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_19, null);
	    }

    |		lv_name_0_20=
	RDROP
    {
        newLeafNode(lv_name_0_20, grammarAccess.getIntrinsicStackWordsAccess().getNameRDROPKeyword_0_19());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicStackWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_20, null);
	    }

)

)
)
;





// Entry rule entryRuleIntrinsicMemoryWords
entryRuleIntrinsicMemoryWords returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntrinsicMemoryWordsRule()); }
	 iv_ruleIntrinsicMemoryWords=ruleIntrinsicMemoryWords 
	 { $current=$iv_ruleIntrinsicMemoryWords.current; } 
	 EOF 
;

// Rule IntrinsicMemoryWords
ruleIntrinsicMemoryWords returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=
	LD
    {
        newLeafNode(lv_name_0_1, grammarAccess.getIntrinsicMemoryWordsAccess().getNameLDKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=
	CommercialAt
    {
        newLeafNode(lv_name_0_2, grammarAccess.getIntrinsicMemoryWordsAccess().getNameCommercialAtKeyword_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=
	ST
    {
        newLeafNode(lv_name_0_3, grammarAccess.getIntrinsicMemoryWordsAccess().getNameSTKeyword_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=
	ExclamationMark
    {
        newLeafNode(lv_name_0_4, grammarAccess.getIntrinsicMemoryWordsAccess().getNameExclamationMarkKeyword_0_3());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=
	DigitTwoCommercialAt
    {
        newLeafNode(lv_name_0_5, grammarAccess.getIntrinsicMemoryWordsAccess().getName2Keyword_0_4());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=
	DigitTwoExclamationMark
    {
        newLeafNode(lv_name_0_6, grammarAccess.getIntrinsicMemoryWordsAccess().getName2Keyword_0_5());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=
	LLD
    {
        newLeafNode(lv_name_0_7, grammarAccess.getIntrinsicMemoryWordsAccess().getNameLLDKeyword_0_6());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=
	L_1
    {
        newLeafNode(lv_name_0_8, grammarAccess.getIntrinsicMemoryWordsAccess().getNameLKeyword_0_7());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

    |		lv_name_0_9=
	LST
    {
        newLeafNode(lv_name_0_9, grammarAccess.getIntrinsicMemoryWordsAccess().getNameLSTKeyword_0_8());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_9, null);
	    }

    |		lv_name_0_10=
	L
    {
        newLeafNode(lv_name_0_10, grammarAccess.getIntrinsicMemoryWordsAccess().getNameLKeyword_0_9());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_10, null);
	    }

    |		lv_name_0_11=
	TLD
    {
        newLeafNode(lv_name_0_11, grammarAccess.getIntrinsicMemoryWordsAccess().getNameTLDKeyword_0_10());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_11, null);
	    }

    |		lv_name_0_12=
	T_1
    {
        newLeafNode(lv_name_0_12, grammarAccess.getIntrinsicMemoryWordsAccess().getNameTKeyword_0_11());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_12, null);
	    }

    |		lv_name_0_13=
	TST
    {
        newLeafNode(lv_name_0_13, grammarAccess.getIntrinsicMemoryWordsAccess().getNameTSTKeyword_0_12());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_13, null);
	    }

    |		lv_name_0_14=
	T
    {
        newLeafNode(lv_name_0_14, grammarAccess.getIntrinsicMemoryWordsAccess().getNameTKeyword_0_13());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_14, null);
	    }

    |		lv_name_0_15=
	ST_1
    {
        newLeafNode(lv_name_0_15, grammarAccess.getIntrinsicMemoryWordsAccess().getNameSTKeyword_0_14());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_15, null);
	    }

    |		lv_name_0_16=
	PlusSignExclamationMark
    {
        newLeafNode(lv_name_0_16, grammarAccess.getIntrinsicMemoryWordsAccess().getNamePlusSignExclamationMarkKeyword_0_15());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_16, null);
	    }

    |		lv_name_0_17=
	INC
    {
        newLeafNode(lv_name_0_17, grammarAccess.getIntrinsicMemoryWordsAccess().getNameINCKeyword_0_16());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_17, null);
	    }

    |		lv_name_0_18=
	DEC
    {
        newLeafNode(lv_name_0_18, grammarAccess.getIntrinsicMemoryWordsAccess().getNameDECKeyword_0_17());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_18, null);
	    }

    |		lv_name_0_19=
	ON
    {
        newLeafNode(lv_name_0_19, grammarAccess.getIntrinsicMemoryWordsAccess().getNameONKeyword_0_18());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_19, null);
	    }

    |		lv_name_0_20=
	OFF
    {
        newLeafNode(lv_name_0_20, grammarAccess.getIntrinsicMemoryWordsAccess().getNameOFFKeyword_0_19());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_20, null);
	    }

    |		lv_name_0_21=
	ERASE
    {
        newLeafNode(lv_name_0_21, grammarAccess.getIntrinsicMemoryWordsAccess().getNameERASEKeyword_0_20());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_21, null);
	    }

    |		lv_name_0_22=
	FILL
    {
        newLeafNode(lv_name_0_22, grammarAccess.getIntrinsicMemoryWordsAccess().getNameFILLKeyword_0_21());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_22, null);
	    }

    |		lv_name_0_23=
	COUNT
    {
        newLeafNode(lv_name_0_23, grammarAccess.getIntrinsicMemoryWordsAccess().getNameCOUNTKeyword_0_22());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_23, null);
	    }

    |		lv_name_0_24=
	MOVE
    {
        newLeafNode(lv_name_0_24, grammarAccess.getIntrinsicMemoryWordsAccess().getNameMOVEKeyword_0_23());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_24, null);
	    }

    |		lv_name_0_25=
	PLACE
    {
        newLeafNode(lv_name_0_25, grammarAccess.getIntrinsicMemoryWordsAccess().getNamePLACEKeyword_0_24());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicMemoryWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_25, null);
	    }

)

)
)
;





// Entry rule entryRuleIntrinsicArithmeticWords
entryRuleIntrinsicArithmeticWords returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntrinsicArithmeticWordsRule()); }
	 iv_ruleIntrinsicArithmeticWords=ruleIntrinsicArithmeticWords 
	 { $current=$iv_ruleIntrinsicArithmeticWords.current; } 
	 EOF 
;

// Rule IntrinsicArithmeticWords
ruleIntrinsicArithmeticWords returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
(
		lv_name_0_1=
	PlusSign
    {
        newLeafNode(lv_name_0_1, grammarAccess.getIntrinsicArithmeticWordsAccess().getNamePlusSignKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_1, null);
	    }

    |		lv_name_0_2=
	HyphenMinus
    {
        newLeafNode(lv_name_0_2, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameHyphenMinusKeyword_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_2, null);
	    }

    |		lv_name_0_3=
	Asterisk
    {
        newLeafNode(lv_name_0_3, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameAsteriskKeyword_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_3, null);
	    }

    |		lv_name_0_4=
	Solidus
    {
        newLeafNode(lv_name_0_4, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameSolidusKeyword_0_3());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_4, null);
	    }

    |		lv_name_0_5=
	DigitTwoAsterisk
    {
        newLeafNode(lv_name_0_5, grammarAccess.getIntrinsicArithmeticWordsAccess().getName2Keyword_0_4());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_5, null);
	    }

    |		lv_name_0_6=
	DigitTwoSolidus
    {
        newLeafNode(lv_name_0_6, grammarAccess.getIntrinsicArithmeticWordsAccess().getName2Keyword_0_5());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_6, null);
	    }

    |		lv_name_0_7=
	U2
    {
        newLeafNode(lv_name_0_7, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameU2Keyword_0_6());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_7, null);
	    }

    |		lv_name_0_8=
	ROR
    {
        newLeafNode(lv_name_0_8, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameRORKeyword_0_7());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_8, null);
	    }

    |		lv_name_0_9=
	DROR
    {
        newLeafNode(lv_name_0_9, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameDRORKeyword_0_8());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_9, null);
	    }

    |		lv_name_0_10=
	ROL
    {
        newLeafNode(lv_name_0_10, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameROLKeyword_0_9());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_10, null);
	    }

    |		lv_name_0_11=
	DROL
    {
        newLeafNode(lv_name_0_11, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameDROLKeyword_0_10());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_11, null);
	    }

    |		lv_name_0_12=
	PACK
    {
        newLeafNode(lv_name_0_12, grammarAccess.getIntrinsicArithmeticWordsAccess().getNamePACKKeyword_0_11());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_12, null);
	    }

    |		lv_name_0_13=
	UNPACK
    {
        newLeafNode(lv_name_0_13, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameUNPACKKeyword_0_12());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_13, null);
	    }

    |		lv_name_0_14=
	SHIFT
    {
        newLeafNode(lv_name_0_14, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameSHIFTKeyword_0_13());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_14, null);
	    }

    |		lv_name_0_15=
	ASHIFT
    {
        newLeafNode(lv_name_0_15, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameASHIFTKeyword_0_14());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_15, null);
	    }

    |		lv_name_0_16=
	DigitTwoAsteriskAsterisk
    {
        newLeafNode(lv_name_0_16, grammarAccess.getIntrinsicArithmeticWordsAccess().getName2Keyword_0_15());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_16, null);
	    }

    |		lv_name_0_17=
	DigitZeroEqualsSign
    {
        newLeafNode(lv_name_0_17, grammarAccess.getIntrinsicArithmeticWordsAccess().getName0Keyword_0_16());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_17, null);
	    }

    |		lv_name_0_18=
	DigitZeroLessThanSignGreaterThanSign
    {
        newLeafNode(lv_name_0_18, grammarAccess.getIntrinsicArithmeticWordsAccess().getName0Keyword_0_17());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_18, null);
	    }

    |		lv_name_0_19=
	DigitZeroLessThanSign
    {
        newLeafNode(lv_name_0_19, grammarAccess.getIntrinsicArithmeticWordsAccess().getName0Keyword_0_18());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_19, null);
	    }

    |		lv_name_0_20=
	D0
    {
        newLeafNode(lv_name_0_20, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameD0Keyword_0_19());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_20, null);
	    }

    |		lv_name_0_21=
	NEGATE
    {
        newLeafNode(lv_name_0_21, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameNEGATEKeyword_0_20());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_21, null);
	    }

    |		lv_name_0_22=
	DNEGATE
    {
        newLeafNode(lv_name_0_22, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameDNEGATEKeyword_0_21());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_22, null);
	    }

    |		lv_name_0_23=
	DigitOnePlusSign
    {
        newLeafNode(lv_name_0_23, grammarAccess.getIntrinsicArithmeticWordsAccess().getName1Keyword_0_22());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_23, null);
	    }

    |		lv_name_0_24=
	DigitOneHyphenMinus
    {
        newLeafNode(lv_name_0_24, grammarAccess.getIntrinsicArithmeticWordsAccess().getName1Keyword_0_23());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_24, null);
	    }

    |		lv_name_0_25=
	TRUE
    {
        newLeafNode(lv_name_0_25, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameTRUEKeyword_0_24());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_25, null);
	    }

    |		lv_name_0_26=
	FALSE
    {
        newLeafNode(lv_name_0_26, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameFALSEKeyword_0_25());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_26, null);
	    }

    |		lv_name_0_27=
	CELL
    {
        newLeafNode(lv_name_0_27, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameCELLKeyword_0_26());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_27, null);
	    }

    |		lv_name_0_28=
	CELL_1
    {
        newLeafNode(lv_name_0_28, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameCELLKeyword_0_27());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_28, null);
	    }

    |		lv_name_0_29=
	CARRY_RESET
    {
        newLeafNode(lv_name_0_29, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameCARRY_RESETKeyword_0_28());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_29, null);
	    }

    |		lv_name_0_30=
	CARRYSET
    {
        newLeafNode(lv_name_0_30, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameCARRYSETKeyword_0_29());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_30, null);
	    }

    |		lv_name_0_31=
	ABS
    {
        newLeafNode(lv_name_0_31, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameABSKeyword_0_30());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_31, null);
	    }

    |		lv_name_0_32=
	DABS
    {
        newLeafNode(lv_name_0_32, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameDABSKeyword_0_31());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_32, null);
	    }

    |		lv_name_0_33=
	EXTEND
    {
        newLeafNode(lv_name_0_33, grammarAccess.getIntrinsicArithmeticWordsAccess().getNameEXTENDKeyword_0_32());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntrinsicArithmeticWordsRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_33, null);
	    }

)

)
)
;





// Entry rule entryRuleWord
entryRuleWord returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getWordRule()); }
	 iv_ruleWord=ruleWord 
	 { $current=$iv_ruleWord.current; } 
	 EOF 
;

// Rule Word
ruleWord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWordAccess().getIntrinsicBranchWordsParserRuleCall_0()); 
    }
    this_IntrinsicBranchWords_0=ruleIntrinsicBranchWords
    {
        $current = $this_IntrinsicBranchWords_0.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWordAccess().getIntrinsicStackWordsParserRuleCall_1()); 
    }
    this_IntrinsicStackWords_1=ruleIntrinsicStackWords
    {
        $current = $this_IntrinsicStackWords_1.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWordAccess().getIntrinsicMemoryWordsParserRuleCall_2()); 
    }
    this_IntrinsicMemoryWords_2=ruleIntrinsicMemoryWords
    {
        $current = $this_IntrinsicMemoryWords_2.current;
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getWordAccess().getIntrinsicArithmeticWordsParserRuleCall_3()); 
    }
    this_IntrinsicArithmeticWords_3=ruleIntrinsicArithmeticWords
    {
        $current = $this_IntrinsicArithmeticWords_3.current;
        afterParserOrEnumRuleCall();
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getWordAccess().getNameLITERALParserRuleCall_4_0()); 
	    }
		lv_name_4_0=ruleLITERAL		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getWordRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_4_0, 
        		"LITERAL");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		lv_name_5_0=RULE_ID
		{
			newLeafNode(lv_name_5_0, grammarAccess.getWordAccess().getNameIDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWordRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"ID");
	    }

)
))
;





